/*
 * Copyright (c) 2024 Aventyr
 *
 * All rights reserved in Aventyr authored and generated code (including the selection and arrangement of the source code
 * base regardless of the authorship of individual files), but not including any copyright interest(s) owned by a third party
 * related to source code or object code authored or generated by non-Aventyr personnel.
 *
 * This source code includes Aventyr confidential and/or proprietary information and may include Aventyr trade secrets.
 * Any use, disclosure and/or reproduction is prohibited unless authorized in writing.
 *
 * Publication Rights :: Aventyr Private
 */

package postgres

import "time"

// Config defines the postgres configuration
// This configuration does not take into consideration the SSL mode
// TODO: enhance with SSL mode
type Config struct {
	DBHost                string        // DBHost represents the database host
	DBPort                int           // DBPort is the database port
	DBName                string        // DBName is the database name
	DBUser                string        // DBUser is the database user used to connect
	DBPassword            string        // DBPassword is the database password
	DBSchema              string        // DBSchema represents the database schema
	MaxConnections        int           // MaxConnections represents the number of max connections in the pool
	MinConnections        int           // MinConnections represents the number of minimum connections in the pool
	MaxConnectionLifetime time.Duration // MaxConnectionLifetime represents the duration since creation after which a connection will be automatically closed.
	MaxConnIdleTime       time.Duration // MaxConnIdleTime is the duration after which an idle connection will be automatically closed by the health check.
	HealthCheckPeriod     time.Duration // HeathCheckPeriod is the duration between checks of the health of idle connections.
}

// NewConfig creates an instance of Config
func NewConfig(host string, port int, user, password, dbName string) *Config {
	return &Config{
		DBHost:                host,
		DBPort:                port,
		DBName:                dbName,
		DBUser:                user,
		DBPassword:            password,
		MaxConnections:        4,
		MinConnections:        0,
		MaxConnectionLifetime: time.Hour,
		MaxConnIdleTime:       30 * time.Minute,
		HealthCheckPeriod:     time.Minute,
	}
}
